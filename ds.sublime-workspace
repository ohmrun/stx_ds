{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"tr",
				"tree"
			],
			[
				"Ma",
				"MapT"
			],
			[
				"M",
				"MapT	class"
			],
			[
				"RB",
				"RBMap"
			],
			[
				"k",
				"key"
			],
			[
				"RBM",
				"RBMap"
			],
			[
				"get_le",
				"get_length"
			],
			[
				"Abs",
				"AbstractTrait"
			],
			[
				"fo",
				"foreach"
			],
			[
				"VanillaS",
				"VanillaStream"
			],
			[
				"Vani",
				"Vanilla"
			],
			[
				"va",
				"vanilla"
			],
			[
				"Http",
				"HttpValue	class"
			],
			[
				"Vanil",
				"VanillaTransformer"
			],
			[
				"prop",
				"propagator"
			],
			[
				"Node",
				"NodeHttpServerReq"
			],
			[
				"confi",
				"configuration"
			],
			[
				"DEfault",
				"DefaultMiddleWare"
			],
			[
				"lif",
				"liftS<Z>	function"
			],
			[
				"Defau",
				"DefaultHttp"
			],
			[
				"De",
				"DefaultConfig"
			],
			[
				"re",
				"request"
			],
			[
				"req",
				"Request	haxe.web"
			],
			[
				"stre",
				"stream	var"
			],
			[
				"tra",
				"transformer	var"
			],
			[
				"c",
				"createInstance(...)	createInstance.T"
			],
			[
				"pu",
				"push"
			],
			[
				"w",
				"withInput"
			],
			[
				"node",
				"Node	class"
			],
			[
				"sen",
				"sendLater(...)	stx.reactive.Stream<Unknown<0>>"
			],
			[
				"request",
				"request_stream	var"
			],
			[
				"reques",
				"request_stream	var"
			],
			[
				"send",
				"sendEvent"
			],
			[
				"fun",
				"func"
			],
			[
				"Function",
				"FunctionTools"
			],
			[
				"dnoe",
				"dnode_server"
			],
			[
				"Str",
				"stream"
			],
			[
				"db",
				"dbapi"
			],
			[
				"set",
				"setup"
			],
			[
				"res",
				"response"
			],
			[
				"Api",
				"ApiBase"
			],
			[
				"proto",
				"prototype"
			],
			[
				"ty",
				"typearr"
			],
			[
				"in",
				"instantiate"
			],
			[
				"cla",
				"className"
			],
			[
				"prto",
				"prototype"
			],
			[
				"prot",
				"prototype"
			],
			[
				"ar",
				"arity"
			],
			[
				"Auh",
				"AuthRedis"
			],
			[
				"Funct",
				"Function"
			],
			[
				"Off",
				"OFF_state"
			],
			[
				"init",
				"initial_to_OFF"
			],
			[
				"ini",
				"initial_to_OFF [function]"
			],
			[
				"initSta",
				"initStateNameAct"
			],
			[
				"are",
				"areEqual"
			],
			[
				"from",
				"fromUserSig"
			],
			[
				"isN",
				"isNotNull(...) : Void"
			],
			[
				"Async",
				"AsyncTest"
			],
			[
				"AS",
				"AsyncFactory [class]"
			],
			[
				"e",
				"equals(...) : Bool"
			],
			[
				"myC",
				"myCurState(get_myCurState,set_myCurState) [var]"
			],
			[
				"bi",
				"bindl"
			],
			[
				"s",
				"split(...) : Event, Unknown<3>>>"
			],
			[
				"prom",
				"promote( Void , (Unknown<1> ) : Void)"
			],
			[
				"prune",
				"pruneUnusedEvents"
			],
			[
				"en",
				"event() : Event>"
			],
			[
				"const",
				"constant() : EightStateMachine>"
			],
			[
				"con",
				"constant() : EightStateMachine>"
			],
			[
				"Metho",
				"Method1 [class]"
			],
			[
				"Event",
				"EventDispatcher [class]"
			],
			[
				"run",
				"run(...) : Void"
			],
			[
				"han",
				"handler"
			],
			[
				"is",
				"isInStateFunction(...) : Bool"
			],
			[
				"even",
				"eventListener [function]"
			],
			[
				"Ast",
				"AsyncFactory [class]"
			],
			[
				"munit",
				"munitHandler"
			],
			[
				"Ei",
				"EightStateMachineTest [class]"
			],
			[
				"mun",
				"munitHandler"
			],
			[
				"isT",
				"isTrue(...) : Void"
			],
			[
				"com",
				"compareMethods(...) : Bool"
			],
			[
				"m",
				"compareMethods(...) : Bool"
			],
			[
				"comp",
				"compareStoF"
			],
			[
				"hsm",
				"hsm_currentState"
			],
			[
				"fi",
				"find(...) : CacheObject>"
			],
			[
				"paren",
				"parentFunc"
			],
			[
				"Sta",
				"State [class]"
			],
			[
				"ME",
				"Method1 [class]"
			],
			[
				"s_",
				"s_root"
			],
			[
				"enu",
				"enumParameters(...) : Array<Dynamic>"
			],
			[
				"lo",
				"log [package]"
			],
			[
				"Loc",
				"LogLevel [class]"
			],
			[
				"matc",
				"match( s : String ) : Bool"
			],
			[
				"cr",
				"createElement( name : String ) : Xml"
			],
			[
				"n",
				"fn : Null<com.troyworks.core.cogs.State>"
			],
			[
				"or",
				"orAlways(...) : CacheObject>"
			],
			[
				"hsm_s_A",
				"hsm_s_Active [function]"
			],
			[
				"parn",
				"parentFunc [var]"
			],
			[
				"requ",
				"requestTranNoInit [function]"
			],
			[
				"target",
				"targetState"
			],
			[
				"_hsm",
				"_hsm_initState [var]"
			],
			[
				"Stat",
				"StateMachine [class]"
			],
			[
				"hsm_c",
				"hsm_currentState(default,setHsm_currentState) [var]"
			],
			[
				"enum",
				"enumConstructor( e : Dynamic ) : String"
			],
			[
				"get",
				"getEnumName(...) : String"
			],
			[
				"appl",
				"applyOr(...) : Unknown<1>"
			],
			[
				"Tran",
				"Transition"
			],
			[
				"State",
				"StateMachine [class]"
			],
			[
				"T",
				"Transitions [class]"
			],
			[
				"app",
				"applyOr"
			],
			[
				"runnin",
				"running_to_stop"
			],
			[
				"Twee",
				"TweenTransitions [class]"
			],
			[
				"initStat",
				"initStateName"
			],
			[
				"Timer",
				"TimerEvent"
			],
			[
				"A",
				"AsyncFactory [class]"
			],
			[
				"XMl",
				"xml"
			],
			[
				"s_i",
				"s_Idx"
			],
			[
				"Hsm",
				"HsmTest [class]"
			],
			[
				"E",
				"EightStateMachineTest [class]"
			],
			[
				"Gre",
				"GreatNephew : ESSignal"
			],
			[
				"Grea",
				"GreatUncle : ESSignal"
			],
			[
				"Grand",
				"GrandChildInactive2 : ESSignal"
			],
			[
				"gr",
				"GrandChildActive : ESSignal"
			],
			[
				"Child",
				"ChildActive : ESSignal"
			],
			[
				"S",
				"Self : com.troyworks.core.cogs.ESSignal"
			],
			[
				"Sign",
				"SignalCarrier"
			],
			[
				"to",
				"toCarrier"
			],
			[
				"Typ",
				"TypedEvent [class]"
			],
			[
				"ev",
				"event [package]"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/main/haxe/hx/ds/ifs/Range.hx",
			"settings":
			{
				"buffer_size": 99,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/main/haxe/hx/ds/range/SingleItemRange.hx",
			"settings":
			{
				"buffer_size": 395,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/test/haxe/Test.hx",
			"settings":
			{
				"buffer_size": 118,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main/haxe/hx/ds/ifs/Source.hx",
			"settings":
			{
				"buffer_size": 101,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Haxe/Support/Hxml.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"ed",
				"Project: Edit"
			],
			[
				"jslin",
				"JSLint: Run JSLint"
			],
			[
				"jsli",
				"JSLint: Run JSLint"
			],
			[
				"jsl",
				"JSLint: Run JSLint"
			],
			[
				"jslint",
				"JSLint: Run JSLint"
			],
			[
				"j",
				"JSLint: Run JSLint"
			],
			[
				"js",
				"JSLint: Show JSLint Result"
			],
			[
				"JSL",
				"JSLint: Run JSLint"
			],
			[
				"JSli",
				"JSLint: Run JSLint"
			],
			[
				"p",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"ja",
				"Set Syntax: Jade"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"pack	",
				"Package Control: Install Package"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"x",
				"Set Syntax: XML"
			],
			[
				"xm",
				"Set Syntax: XML"
			],
			[
				"packa	",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"Pac",
				"Package Control: Discover Packages"
			],
			[
				"pack",
				"Package Control: Add Repository"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"INS",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"Inst",
				"Package Control: Install Package"
			],
			[
				"ke",
				"Preferences: Key Bindings - Default"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"Instal",
				"Package Control: Install Package"
			],
			[
				"bin",
				"Preferences: Global Settings - User"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 205.0,
		"history":
		[
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/dayz/prj/haxe/ds",
		"/home/dayz/prj/haxe/ds/src",
		"/home/dayz/prj/haxe/ds/src/main",
		"/home/dayz/prj/haxe/ds/src/main/haxe",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds/range"
	],
	"file_history":
	[
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds/Stack.hx",
		"/home/dayz/prj/haxe/stax/src/main/haxe/hx/run/RunAnonymous.hx",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds/Range.hx",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/reactive/Pulse.hx",
		"/home/dayz/prj/haxe/stax/src/main/haxe/fletch/env/Platform.hx",
		"/home/dayz/prj/haxe/stax/src/main/haxe/Prelude.hx",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds/Collection.hx",
		"/home/dayz/prj/haxe/ds/hxml/build-dev.hxml",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds/ifs/Range.hx",
		"/home/dayz/prj/haxe/ds/src/test/haxe/Test.hx",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds/TreeNode.hx",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds/ifs/RandomAccessRange.hx",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds/ifs/ForwardRange.hx",
		"/home/dayz/prj/haxe/ds/hxml/test/common.hxml",
		"/home/dayz/prj/haxe/ds/hxml/test/neko.hxml",
		"/home/dayz/prj/haxe/ds/build.hxml",
		"/home/dayz/prj/haxe/ds/src/main/haxe/stx/ds/Map.hx",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds/DList.hx",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/ds/ifs/Range.hx",
		"/home/dayz/prj/haxe/ds/ds.sublime-project",
		"/home/dayz/prj/haxe/ds/hxml/libs.hxml",
		"/home/dayz/prj/haxe/ds/hxml/test/libs.hxml",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/ioc/Binder.hx",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/ds/Iterable",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds/Ranges.hx",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/math/Range.hx",
		"/home/dayz/prj/haxe/ds/README.md",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/test/TestErrors.hx",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/ds/List.hx",
		"/home/dayz/prj/haxe/ds/hxml/common.hxml",
		"/home/dayz/prj/haxe/stax/test/java/src/stx/Compare_ok_41__Fun.java",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/macro/Macros.hx",
		"/home/dayz/prj/haxe/ds/Main.hx",
		"/home/dayz/prj/haxe/ds/src/main/haxe/hx/ds/range/IteratorRange.hx",
		"/home/dayz/prj/haxe/stax/test/java/src/stx/io/log/DefaultLogger.java",
		"/home/dayz/prj/haxe/stax/Doc.hx",
		"/home/dayz/prj/haxe/stax/src/dev/haxe/stx/Iteratee.hx",
		"/home/dayz/prj/haxe/stax/test/java/src/stx/DirIntIterator.java",
		"/home/dayz/prj/haxe/stax/src/boot/haxe/stx/reactive/DisposableTest.hx",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/js/dom/DomExtensions.hx",
		"/home/dayz/prj/haxe/stax/build/dev/nodejs.hxml",
		"/home/dayz/prj/haxe/stax/json[pit]/CollectionsJValue.hx",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/Lenses.hx",
		"/home/dayz/prj/haxe/stax/src/dev/haxe/hx/Timer.hx",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/net/http/HttpXml.hx",
		"/home/dayz/prj/haxe/stax/haxe.exe.stackdump",
		"/home/dayz/prj/haxe/stax/json[pit]/types/stx/ds/ListJValue.hx",
		"/home/dayz/prj/haxe/stax/test/java/src/stx/Lists.java",
		"/home/dayz/prj/haxe/stax/test/cpp/src/List.cpp",
		"/home/dayz/prj/haxe/stax/test/cpp/include/List.h",
		"/home/dayz/prj/haxe/stax/test/java/src/stx/io/log/LogItem.java",
		"/home/dayz/prj/haxe/stax/LICENSE.md",
		"/home/dayz/prj/haxe/stax/stax.sublime-project",
		"/home/dayz/prj/haxe/ds/src/main/haxe/stx/ds/RBMap.hx",
		"/home/dayz/prj/haxe/stax/test/php/lib/Free.enum.php",
		"/home/dayz/prj/haxe/stax/test/java/src/stx/Functions0_promote_121__Fun.java",
		"/home/dayz/prj/haxe/stax/tools/factor-js",
		"/home/dayz/prj/haxe/stax/test/java/src/stx/reactive/EventualObservables.java",
		"/home/dayz/prj/haxe/stax/src/main/haxe/stx/test/TestResult.hx",
		"/home/dayz/prj/haxe/stax/TODO",
		"/home/dayz/prj/haxe/stax/test/java/src/hx/ds/OrderedMap_sortOnKey_57__Fun.java",
		"/home/dayz/prj/haxe/ds/src/main/haxe/ds/TreeNode.hx",
		"/home/dayz/prj/haxe/ds/src/main/haxe/stx/ds/Zipper.hx",
		"/home/dayz/prj/haxe/stax/build/test.hxml",
		"/home/dayz/prj/haxe/stax/test/java/src/haxe/root/Test.java",
		"/home/dayz/prj/haxe/stax/build/test/js.hxml",
		"/C/world/stack/win/prg/sublime/v3/Data/Packages/GoSublime/USAGE.md",
		"/C/world/prj/clinic/assets/Clinica Central.txt",
		"/C/world/prj/clinic/centroclinicoydental.wordpress.2014-08-27.txt",
		"/C/world/prj/clinic/onedrive/passwords.txt",
		"/C/world/prj/haxe/ds/src/main/haxe/stx/HaxeEnumerator.hx",
		"/C/world/prj/haxe/ds/src/main/haxe/stx/ds/types/RBTree.hx",
		"/C/world/prj/haxe/ds/src/main/haxe/stx/ds/types/RedBlack.hx",
		"/C/world/prj/haxe/ds/src/main/haxe/hx/ds/Heap.hx",
		"/C/world/prj/haxe/ds/src/main/haxe/hx/ds/ifs/LocatableByValue.hx",
		"/C/world/prj/haxe/ds/build.hxml",
		"/C/world/prj/haxe/ds/src/main/haxe/hx/ds/Collection",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/BinarySearchTree.hx",
		"/C/world/stack/prj/haxe/lib/polygonal-ds/1,39/de/polygonal/ds/Array2.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/Array2d.hx",
		"/C/world/stack/prj/haxe/stax/src/main/haxe/hx/ds/Queue.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/ifs/Capacity.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/ifs/Data.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Collection.hx",
		"/C/world/stack/prj/haxe/stax/src/main/haxe/stx/ds/Enumerator.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Enumerator.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/ifs/LocatableByValue.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/ifs/Indexed.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/ifs/Locatable.hx",
		"/C/world/stack/prj/haxe/ds/Main.hx",
		"/C/world/stack/prj/haxe/stax/src/main/haxe/hx/ds/DList.hx",
		"/C/world/stack/prj/haxe/stax/src/main/haxe/hx/ds/Stack.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/List.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/Stack.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/Queue.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/Dlist.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/Collection",
		"/C/world/stack/prj/haxe/stax/src/main/haxe/stx/ds/Enumerable",
		"/C/world/stack/prj/haxe/stax/src/main/haxe/stx/ds/Enumerable.hx",
		"/C/world/stack/prj/haxe/stax/src/main/haxe/hx/ds/MultiMap.hx",
		"/C/world/stack/prj/haxe/stax/src/main/haxe/hx/ds/OrderedMap.hx",
		"/C/world/stack/prj/haxe/lib/polygonal-ui/1,01/de/polygonal/ui/UI.hx",
		"/C/world/stack/prj/haxe/lib/polygonal-ui/1,01/de/polygonal/ui/alignment/Bin.hx",
		"/C/world/stack/prj/haxe/lib/polygonal-ui/1,01/de/polygonal/ui/trigger/pointer/MousePointer.hx",
		"/C/world/stack/prj/haxe/lib/polygonal-ui/1,01/de/polygonal/ui/trigger/state/TriggerStateMachine.hx",
		"/C/world/stack/prj/haxe/lib/polygonal-ui/1,01/de/polygonal/ui/trigger/state/TriggerState.hx",
		"/C/world/stack/prj/haxe/lib/polygonal-ui/1,01/de/polygonal/ui/trigger/pointer/Pointer.hx",
		"/C/world/stack/prj/haxe/lib/polygonal-ui/1,01/de/polygonal/ui/alignment/Boundable.hx",
		"/C/world/stack/prj/haxe/lib/polygonal-ui/1,01/de/polygonal/ui/alignment/Anchor.hx",
		"/C/world/stack/prj/haxe/lib/polygonal-ui/1,01/de/polygonal/ui/alignment/Axis.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Place.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Sortable.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Traversable.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Traversor.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Opaque.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Searchable.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Indexed.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Insertable.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Locatable.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/Capacity.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/Heap.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/TreeNode.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/Set.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/Graph.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/ds/ifs/LocatableByValue.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/hx/ds/DList.hx",
		"/C/world/stack/prj/haxe/stax/src/main/haxe/stx/mcr/Self.hx",
		"/C/world/stack/prj/haxe/ds/src/main/haxe/stx/HaxeEnumerator.hx"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\world\\stack\\prj\\haxe\\ds\\src\\main\\haxe\\hx",
			"C:\\world\\stack\\prj\\haxe\\ds\\src\\main\\haxe\\stx",
			"C:\\world\\stack\\prj\\ds\\src\\main\\haxe\\stx\\ds\\ifs",
			"C:\\world\\stack\\prj\\vanilla\\bin\\node_modules\\connect\\lib",
			"C:\\World\\Stack\\os\\x\\src\\hx\\scuts",
			"C:\\world\\stack\\prj\\vanilla\\bin\\node_modules",
			"C:\\world\\stack\\os\\x\\src\\hx\\hx-node",
			"C:\\world\\stack\\os\\x\\src\\hx\\hx-node-externs\\js",
			"C:\\world\\stack\\prj\\vanilla",
			"C:\\world\\stack\\os\\x\\src\\hx\\tinkerbell",
			"C:\\world\\stack\\prj\\vanilla\\src\\vanilla",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\jstm",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\jstm",
			"C:\\world\\stack\\projects\\haxetacy",
			"C:\\world\\stack\\projects\\troyworks\\unit\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\tests\\src\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\dev\\src\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\dev\\src\\com\\troyworks",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks",
			"C:\\world\\stack\\projects\\troyworks\\unit\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks\\core\\cogs",
			"import com.sf.Assert;",
			"C:\\world\\stack\\projects\\troyworks\\src\\com",
			"C:\\world\\stack\\projects\\troyworks\\unit\\com",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3\\tests\\src\\com\\troyworks\\core\\cogs",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks",
			"C:\\world\\stack\\projects\\troyworks\\troyworks\\AS3",
			"C:\\world\\stack\\projects\\troyworks\\unit\\test",
			"C:\\world\\stack\\projects\\troyworks\\src",
			"C:\\world\\stack\\projects\\troyworks\\src\\com\\troyworks\\core",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"#",
			"DIter",
			"leng",
			"size",
			"length",
			"using",
			"  \n",
			"compare",
			"twitter",
			"BaseType",
			"getLength",
			"length",
			"ensure",
			"Length",
			"_height",
			"_width",
			"Width",
			"Height",
			"Array2D",
			"2D",
			"       ",
			"      ",
			"has",
			"cont",
			"=",
			"getLength",
			"zen.colhx",
			"sts\\.",
			"sts",
			"contains",
			"cont",
			"coll.i",
			"Int",
			"public static",
			"\\\\",
			"hgeta",
			"<,",
			"Multi",
			"map",
			"MetaTransform",
			"handle",
			"use",
			"next",
			"Middle",
			"foreach",
			"EventE",
			"listen",
			"NodeEventEmitter",
			"proto",
			".instance",
			"use",
			"Trait",
			"interface",
			"interface ",
			"interf",
			"Build",
			"build",
			"autobuild",
			"class",
			"classs",
			"NodeHttpServer",
			"HttpS",
			"on",
			"bodyParser",
			"parser",
			"set",
			"error",
			"noxe",
			"force",
			"forceInline",
			"package node",
			"NodeHttpS",
			"use",
			"valueN",
			"value",
			"conso",
			"trace",
			"console",
			"ocnsole",
			"trace",
			"map",
			"propagateP",
			"sendE",
			"send",
			"sendE",
			"start",
			"_last",
			"on prop",
			"propagateP",
			"sendE",
			"constant",
			"startsWith",
			"ion map",
			"map",
			"document",
			"Http",
			"InjectorConfig",
			"NodeNetSocket",
			"NodeHttpReq",
			"HttpReq",
			"HttpS",
			"Http",
			"As",
			"Then",
			"or",
			"Split",
			"split",
			"Split",
			"entuple",
			"into",
			"Met",
			"exe",
			"Method",
			"exe",
			"Metho",
			"Method *< *([a-zA-Z]*), *([a-zA-Z]*), *([a-zA-Z\\->]*)>",
			"Method *< *(.*), *(.*), *(.*)>",
			"Method \\((.*),",
			"Method\\((.*),",
			"into",
			"FunctionA",
			"Then",
			"ThenA",
			"Then",
			"First",
			"Left",
			"left",
			"foreac"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"hx.ds",
			"stx.",
			"stx",
			"sts.ds.ifs",
			"Float",
			"static public",
			"/",
			"RedisMulti",
			"Gets<HttpValue>",
			"package vanilla",
			"Function1<$1,$2>",
			"untyped __this__",
			"generateStatement",
			"if(err!=null){cb(err);return;}",
			"/",
			"redis",
			"$1,",
			"-cp $1",
			"/",
			"\\\\",
			"simpleState",
			"initState",
			"CogEvent->Dynamic",
			"initState",
			"@AsyncTest",
			"//@AsyncTest",
			"@AsyncTest",
			"currentState",
			"static public",
			"'anonymous'",
			"$1;",
			"$1",
			"import com.sf.Assert;",
			"using com.sf.Assert;",
			"import com.sf.Assert;",
			"compare",
			"hsmIsActive",
			"this.execute($1,$2)",
			"Assert.isNotNull($1)",
			"Assert.isNotNull($1);",
			"Assert.isNotNull(&1);",
			"sOk($1)",
			"sOk()",
			"null",
			"States.nil",
			"public static var nil",
			"this == nil",
			"noop",
			"states",
			"asState",
			"(fn,name,?pos){\\n\\t\\t$1name,pos);",
			"StateMachine.asState($1.execute($2));",
			"asState",
			"super(fn == null ? nil : fn,pos);",
			"new(fn,?pos:PosInfos)",
			"Raw.isInState(this,$1);",
			"return Raw.isInState",
			"return isInState",
			"Raw.tran(this,$1);\nreturn Raw.isInState",
			"Raw.tran(this,$1);\nRaw.isInState",
			"Raw.tran(this,$1);",
			"Raw.requestTranNoInit(this,$1);",
			"Raw.requestTranNoInit($1);",
			"requestTranNoInit",
			"tran",
			"isEmpty():Bool{",
			"requestTranNoInitRaw",
			"tran_raw",
			"State",
			") { Warning(\"Null call\").log(); return null; };",
			") { Warning(\"Null call\").log(); return null };",
			"equals",
			"$1.execute($2);",
			"new AbstractMethodError",
			"State",
			"Options.toOption($1)",
			"Selector",
			"__internal__",
			"call",
			"Option<$1>",
			"hsm_currentState",
			"heart",
			"//@Test",
			"stateHash",
			"query_$1",
			"return 1.0;//return defaultTimeOutInMS;",
			"//$1\nreturn null;//$1\nreturn 1.0;//return defaultTimeOutInMS;",
			"//$1\nreturn null;//$1\n//$1",
			"//$1\nreturn null;//$1\n\\\\$1",
			"//$1\nreturn null;//$1",
			"//$1",
			"fromUserSig",
			"dispatchEvent(ESSignal.$1.fromEnum());",
			"dispatchEvent(ESSignal.$1.fromEnum().getNextSignal());",
			"dispatchEvent($1.fromEnum());",
			"$1",
			"SigInit",
			"SigEntry(_),SigExit(_)",
			"CogEvent -> Dynamic",
			"ESSignal",
			"CogEvent->Dynamic",
			"TypedEvent<SignalCarrier>",
			"\\\\"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/main/haxe/hx/ds/ifs/Range.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 99,
						"regions":
						{
						},
						"selection":
						[
							[
								96,
								96
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.haxe.2"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/main/haxe/hx/ds/range/SingleItemRange.hx",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 395,
						"regions":
						{
						},
						"selection":
						[
							[
								288,
								288
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.haxe.2"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/test/haxe/Test.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 118,
						"regions":
						{
						},
						"selection":
						[
							[
								118,
								118
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.haxe.2"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/main/haxe/hx/ds/ifs/Source.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 101,
						"regions":
						{
						},
						"selection":
						[
							[
								39,
								39
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".",
									"selector": "source.haxe.2"
								},
								{
									"characters": ".#",
									"selector": "text.html"
								}
							],
							"haxe-build-id": 0,
							"open_with_edit": true,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 32.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.CSS Extended Completions":
	{
		"height": 0.0
	},
	"output.GoSublime-output":
	{
		"height": 88.0
	},
	"output.MarGo-output":
	{
		"height": 88.0
	},
	"output.exec":
	{
		"height": 206.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.haxe":
	{
		"height": 94.0
	},
	"output.sftp":
	{
		"height": 0.0
	},
	"project": "ds.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"sourc",
				"ds/src/main/haxe/hx/ds/ifs/Source.hx"
			],
			[
				"test",
				"ds/src/test/haxe/Test.hx"
			],
			[
				"ifsran",
				"ds/src/main/haxe/hx/ds/ifs/Range.hx"
			],
			[
				"rang",
				"ds/src/main/haxe/hx/ds/Range.hx"
			],
			[
				"dlis",
				"ds/src/main/haxe/hx/ds/DList.hx"
			],
			[
				"bui",
				"ds/build.hxml"
			],
			[
				"bu",
				"ds/build.hxml"
			],
			[
				"colle",
				"ds/src/main/haxe/hx/ds/Collection.hx"
			],
			[
				"collection",
				"ds/src/main/haxe/hx/ds/Collection.hx"
			],
			[
				"hx/list",
				"stax/src/main/haxe/stx/ds/List.hx"
			],
			[
				"list",
				"stax/src/main/haxe/stx/ds/List.hx"
			],
			[
				"stack",
				"ds/src/main/haxe/hx/ds/Stack.hx"
			],
			[
				"stac",
				"ds/src/main/haxe/hx/ds/Stack.hx"
			],
			[
				"tree",
				"ds/src/main/haxe/hx/ds/TreeNode.hx"
			],
			[
				"map",
				"ds/src/main/haxe/stx/ds/Map.hx"
			],
			[
				"buil",
				"ds/build.hxml"
			],
			[
				"locat",
				"ds/src/main/haxe/hx/ds/ifs/Locatable.hx"
			],
			[
				"enum",
				"stax/src/main/haxe/stx/ds/Enumerable.hx"
			],
			[
				"loc",
				"ds/src/main/haxe/hx/ds/ifs/LocatableByValue.hx"
			],
			[
				"indexed",
				"ds/src/main/haxe/hx/ds/ifs/Indexed.hx"
			],
			[
				"da",
				"ds/src/main/haxe/hx/ds/ifs/Data.hx"
			],
			[
				"capa",
				"ds/src/main/haxe/hx/ds/ifs/Capacity.hx"
			],
			[
				"enumer",
				"stax/src/main/haxe/stx/ds/Enumerator.hx"
			],
			[
				"array",
				"ds/src/main/haxe/hx/ds/Array2d.hx"
			],
			[
				"self",
				"stax/src/main/haxe/stx/mcr/Self.hx"
			],
			[
				"arrays",
				"stax/src/main/haxe/stx/Arrays.hx"
			],
			[
				"refl",
				"stax/src/main/haxe/stx/Reflects.hx"
			],
			[
				"insertab",
				"ds/src/main/haxe/stx/ds/ifs/Insertable.hx"
			],
			[
				"indexe",
				"ds/src/main/haxe/stx/ds/ifs/Indexed.hx"
			],
			[
				"graphn",
				"ds/src/main/haxe/stx/ds/ifs/GraphNode.hx"
			],
			[
				"data",
				"ds/src/main/haxe/stx/ds/ifs/Data.hx"
			],
			[
				"m",
				"ds/Main.hx"
			],
			[
				"sta",
				"stax/stax.sublime-project"
			],
			[
				"jslint",
				"/C/world/stack/os/win/prg/sublime2/Data/Packages/sublime-jslint/sublime-jslint.sublime-settings"
			],
			[
				"redis.hx",
				"src/haxe/db/om/store/Redis.hx"
			],
			[
				"config",
				"popcorn/util/RedisAdminUI/Web.config"
			],
			[
				"session",
				"popcorn/HaXe/src/com/sf/auth/Session.hx"
			],
			[
				"w",
				"popcorn/util/RedisAdminUI/Web.config"
			],
			[
				"serve",
				"popcorn/HaXe/src/com/sf/app/popcorn/site/Serve.hx"
			],
			[
				"main",
				"popcorn/Main.hx"
			],
			[
				"we",
				"popcorn/util/RedisAdminUI/Web.config"
			],
			[
				"unser",
				"std/haxe/Unserializer.hx"
			],
			[
				"",
				"popcorn/util/RedisAdminUI/Web.config"
			],
			[
				"serve.",
				"popcorn/HaXe/src/com/sf/app/popcorn/site/Serve.hx"
			],
			[
				"redis",
				"popcorn/dep/hx-node-redis/src/js/node/redis/Redis.hx"
			],
			[
				"user",
				"popcorn/HaXe/src/com/sf/app/popcorn/schema/user/User.hx"
			],
			[
				"user.",
				"popcorn/HaXe/src/com/realstrategic/User.hx"
			],
			[
				"accou",
				"popcorn/HaXe/src/com/sf/app/popcorn/schema/user/Account.hx"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"strea",
				"~/prj/haxe/streams/streams.sublime-project"
			],
			[
				"la",
				"~/prj/haxe/lambdah/lambdah.sublime-project"
			],
			[
				"",
				"~/prj/haxe/shen/shen.sublime-project"
			],
			[
				"ds",
				"~/prj/haxe/ds/ds.sublime-project"
			],
			[
				"ya",
				"~/prj/haxe/yana/yana.sublime-project"
			],
			[
				"lib",
				"C:\\world\\prj\\haxe\\lib\\hx_lib.sublime-project"
			],
			[
				"boc",
				"/G/home/dayz/box.sublime-project"
			],
			[
				"bo",
				"/G/home/dayz/box.sublime-project"
			],
			[
				"sta",
				"/C/world/stack/prj/stax/stax.sublime-project"
			],
			[
				"sub",
				"/C/world/stack/os/win/prg/sublime/Data/Packages/Haxe/hx_sublime.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 302.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
